<div class="container mx-auto px-4 py-8">
  <div class="mb-6">
    <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Anomaly Detection Dashboard</h1>
    <p class="text-lg text-gray-600 dark:text-gray-400">Monitor unusual patterns and performance deviations in real-time</p>
  </div>
  
  <!-- Action buttons -->
  <div class="flex flex-wrap gap-4 mb-8">
    <%= link_to anomaly_detections_path, class: "inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-200 dark:border-gray-700 dark:hover:bg-gray-700" do %>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500 dark:text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
      </svg>
      All Anomalies
    <% end %>
    
    <%= link_to anomaly_thresholds_path, class: "inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-200 dark:border-gray-700 dark:hover:bg-gray-700" do %>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 text-gray-500 dark:text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
      </svg>
      Manage Thresholds
    <% end %>
    
    <%= button_to run_detection_anomaly_detections_path, method: :post, class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 dark:bg-blue-700 dark:hover:bg-blue-800" do %>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
      </svg>
      Run Detection Now
    <% end %>
  </div>
  
  <!-- Summary statistics -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <div class="flex items-center">
        <div class="p-3 rounded-full bg-red-100 dark:bg-red-900/20 text-red-600 dark:text-red-300 mr-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
          </svg>
        </div>
        <div>
          <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Critical Open</p>
          <p class="text-3xl font-bold text-gray-900 dark:text-white"><%= @critical_anomalies.count %></p>
        </div>
      </div>
    </div>
    
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <div class="flex items-center">
        <div class="p-3 rounded-full bg-yellow-100 dark:bg-yellow-900/20 text-yellow-600 dark:text-yellow-300 mr-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div>
          <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Total Open</p>
          <p class="text-3xl font-bold text-gray-900 dark:text-white"><%= @critical_anomalies.count + @recent_anomalies.count %></p>
        </div>
      </div>
    </div>
    
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <div class="flex items-center">
        <div class="p-3 rounded-full bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-300 mr-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z" />
          </svg>
        </div>
        <div>
          <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Avg Resolution Time</p>
          <p class="text-3xl font-bold text-gray-900 dark:text-white"><%= @resolution_stats[:avg_time_to_resolve] %>h</p>
        </div>
      </div>
    </div>
    
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <div class="flex items-center">
        <div class="p-3 rounded-full bg-green-100 dark:bg-green-900/20 text-green-600 dark:text-green-300 mr-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div>
          <p class="text-sm font-medium text-gray-600 dark:text-gray-400">Resolution Rate</p>
          <p class="text-3xl font-bold text-gray-900 dark:text-white"><%= @resolution_stats[:resolution_rate] %>%</p>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Critical Anomalies -->
  <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-8">
    <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-6">Critical Anomalies</h2>
    
    <% if @critical_anomalies.any? %>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          <thead class="bg-gray-50 dark:bg-gray-900/30">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Metric</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Value</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Deviation</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Detected</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Status</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Action</th>
            </tr>
          </thead>
          <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
            <% @critical_anomalies.each do |anomaly| %>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                  <%= anomaly.metric_name %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                  <%= number_with_precision(anomaly.value, precision: 2) %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300">
                    <%= anomaly.deviation_description %>
                  </span>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                  <%= time_ago_in_words(anomaly.detected_at) %> ago
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                  <%= anomaly.status_with_time %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                  <%= link_to anomaly_detection_path(anomaly), class: "text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300" do %>
                    View
                  <% end %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    <% else %>
      <div class="text-center py-8">
        <p class="text-gray-500 dark:text-gray-400">No critical anomalies detected</p>
      </div>
    <% end %>
  </div>
  
  <!-- Recent Anomalies -->
  <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6 mb-8">
    <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-6">Recent Open Anomalies</h2>
    
    <% if @recent_anomalies.any? %>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          <thead class="bg-gray-50 dark:bg-gray-900/30">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Metric</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Value</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Detected</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Severity</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">Action</th>
            </tr>
          </thead>
          <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
            <% @recent_anomalies.each do |anomaly| %>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                  <%= anomaly.metric_name %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                  <%= number_with_precision(anomaly.value, precision: 2) %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                  <%= time_ago_in_words(anomaly.detected_at) %> ago
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <% if anomaly.severity == "warning" %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-300">
                      Warning
                    </span>
                  <% else %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-300">
                      Critical
                    </span>
                  <% end %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                  <%= link_to anomaly_detection_path(anomaly), class: "text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300" do %>
                    View
                  <% end %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    <% else %>
      <div class="text-center py-8">
        <p class="text-gray-500 dark:text-gray-400">No open anomalies detected</p>
      </div>
    <% end %>
  </div>
  
  <!-- Visualizations -->
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
    <!-- Anomaly Trend Chart -->
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Anomaly Trend (30 Days)</h2>
      <div class="h-80">
        <canvas id="anomalyTrendChart"></canvas>
      </div>
    </div>
    
    <!-- Anomalies by Metric Chart -->
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Anomalies by Metric Type</h2>
      <div class="h-80">
        <canvas id="anomaliesByMetricChart"></canvas>
      </div>
    </div>
  </div>
  
  <!-- Additional Visualizations -->
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
    <!-- Top Campaign Anomalies -->
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Top Campaigns with Anomalies</h2>
      <% if @top_campaign_anomalies.any? %>
        <div class="h-80">
          <canvas id="campaignAnomaliesChart"></canvas>
        </div>
      <% else %>
        <div class="text-center py-8">
          <p class="text-gray-500 dark:text-gray-400">No campaign-specific anomalies detected</p>
        </div>
      <% end %>
    </div>
    
    <!-- Top Distribution Anomalies -->
    <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
      <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Top Distributions with Anomalies</h2>
      <% if @top_distribution_anomalies.any? %>
        <div class="h-80">
          <canvas id="distributionAnomaliesChart"></canvas>
        </div>
      <% else %>
        <div class="text-center py-8">
          <p class="text-gray-500 dark:text-gray-400">No distribution-specific anomalies detected</p>
        </div>
      <% end %>
    </div>
  </div>
</div>

<% content_for :javascripts do %>
  <script>
    document.addEventListener('turbo:load', function() {
      // Anomaly Trend Chart
      const trendCtx = document.getElementById('anomalyTrendChart').getContext('2d');
      new Chart(trendCtx, {
        type: 'line',
        data: {
          labels: <%= raw @anomaly_trends[:dates].to_json %>,
          datasets: [{
            label: 'Anomalies Detected',
            data: <%= raw @anomaly_trends[:counts].to_json %>,
            backgroundColor: 'rgba(59, 130, 246, 0.2)',
            borderColor: 'rgba(59, 130, 246, 1)',
            borderWidth: 2,
            pointBackgroundColor: 'rgba(59, 130, 246, 1)',
            tension: 0.4
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                precision: 0
              }
            }
          },
          plugins: {
            tooltip: {
              callbacks: {
                title: function(context) {
                  return context[0].label;
                },
                label: function(context) {
                  return context.dataset.label + ': ' + context.parsed.y;
                }
              }
            }
          }
        }
      });
      
      // Anomalies by Metric Chart
      const metricData = <%= raw @anomalies_by_metric.to_json %>;
      const metricCtx = document.getElementById('anomaliesByMetricChart').getContext('2d');
      new Chart(metricCtx, {
        type: 'bar',
        data: {
          labels: Object.keys(metricData),
          datasets: [{
            label: 'Count',
            data: Object.values(metricData),
            backgroundColor: [
              'rgba(59, 130, 246, 0.7)',
              'rgba(6, 182, 212, 0.7)',
              'rgba(16, 185, 129, 0.7)',
              'rgba(245, 158, 11, 0.7)',
              'rgba(239, 68, 68, 0.7)',
              'rgba(139, 92, 246, 0.7)'
            ],
            borderWidth: 0
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                precision: 0
              }
            }
          }
        }
      });
      
      <% if @top_campaign_anomalies.any? %>
      // Top Campaign Anomalies Chart
      const campaignData = <%= raw @top_campaign_anomalies.to_json %>;
      const campaignNames = Object.keys(campaignData).map(id => {
        const campaign = campaigns.find(c => c.id === parseInt(id));
        return campaign ? campaign.name : `Campaign #${id}`;
      });
      
      const campaignCtx = document.getElementById('campaignAnomaliesChart').getContext('2d');
      new Chart(campaignCtx, {
        type: 'pie',
        data: {
          labels: campaignNames,
          datasets: [{
            data: Object.values(campaignData),
            backgroundColor: [
              'rgba(59, 130, 246, 0.7)',
              'rgba(16, 185, 129, 0.7)',
              'rgba(245, 158, 11, 0.7)',
              'rgba(239, 68, 68, 0.7)',
              'rgba(139, 92, 246, 0.7)'
            ],
            borderWidth: 1,
            borderColor: '#fff'
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: 'right'
            }
          }
        }
      });
      <% end %>
      
      <% if @top_distribution_anomalies.any? %>
      // Top Distribution Anomalies Chart
      const distributionData = <%= raw @top_distribution_anomalies.to_json %>;
      const distributionNames = Object.keys(distributionData).map(id => {
        const distribution = distributions.find(d => d.id === parseInt(id));
        return distribution ? distribution.name : `Distribution #${id}`;
      });
      
      const distributionCtx = document.getElementById('distributionAnomaliesChart').getContext('2d');
      new Chart(distributionCtx, {
        type: 'pie',
        data: {
          labels: distributionNames,
          datasets: [{
            data: Object.values(distributionData),
            backgroundColor: [
              'rgba(6, 182, 212, 0.7)',
              'rgba(16, 185, 129, 0.7)',
              'rgba(245, 158, 11, 0.7)',
              'rgba(239, 68, 68, 0.7)',
              'rgba(139, 92, 246, 0.7)'
            ],
            borderWidth: 1,
            borderColor: '#fff'
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              position: 'right'
            }
          }
        }
      });
      <% end %>
    });
  </script>
<% end %>
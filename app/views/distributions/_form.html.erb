<%= form_with(model: distribution, class: "space-y-6") do |form| %>
  <% if distribution.errors.any? %>
    <div class="p-4 bg-red-50 text-red-500 rounded mb-6">
      <h2><%= pluralize(distribution.errors.count, "error") %> prohibited this distribution from being saved:</h2>
      <ul class="list-disc pl-5 mt-2">
        <% distribution.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    <div>
      <%= form.label :name, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
      <%= form.text_field :name, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
    </div>

    <div>
      <%= form.label :company_id, "Company", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
      <%= form.collection_select :company_id, @companies, :id, :name, { include_blank: "Select a company" }, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
    </div>
  </div>

  <div>
    <%= form.label :description, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
    <%= form.text_area :description, rows: 3, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    <div>
      <%= form.label :endpoint_type, "Endpoint Type", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
      <%= form.select :endpoint_type, Distribution.endpoint_types.keys.map { |t| [t.titleize, t] }, {}, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white", data: { controller: "field-type", action: "change->field-type#toggleFields", target: "endpoint-type" } %>
      <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">The type of endpoint determines how lead data is sent.</p>
    </div>

    <div>
      <%= form.label :authentication_method, "Authentication Method", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
      <%= form.select :authentication_method, Distribution.authentication_methods.keys.map { |a| [a.titleize, a] }, {}, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white", data: { controller: "field-type", action: "change->field-type#toggleFields", target: "auth-method" } %>
      <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">How this distribution authenticates requests.</p>
    </div>

    <div>
      <%= form.label :status, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
      <%= form.select :status, Distribution.statuses.keys.map { |s| [s.titleize, s] }, {}, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
      <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Inactive distributions won't receive leads.</p>
    </div>
  </div>

  <div class="border rounded-md p-4 border-gray-300 dark:border-gray-700">
    <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Endpoint Configuration</h3>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div class="auth-field">
        <%= form.label :endpoint_url, "Primary Endpoint URL", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.text_field :endpoint_url, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
          <span class="endpoint-type-desc post-only">URL to post complete lead data.</span>
          <span class="endpoint-type-desc ping-only hidden">URL to send ping data for bidding.</span>
          <span class="endpoint-type-desc ping-post hidden">URL to send ping data for bidding.</span>
        </p>
      </div>

      <div class="endpoint-type-field ping-post-field hidden">
        <%= form.label :post_endpoint_url, "Post Endpoint URL", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.text_field :post_endpoint_url, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">URL to post complete lead data after ping (required for ping-post).</p>
      </div>
    </div>

    <div class="mt-4 grid grid-cols-1 md:grid-cols-3 gap-6">
      <div>
        <%= form.label :request_method, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.select :request_method, Distribution.request_methods.keys.map { |m| [m.titleize, m] }, {}, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
      </div>

      <div>
        <%= form.label :request_format, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.select :request_format, Distribution.request_formats.keys.map { |f| [f.titleize, f] }, {}, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
      </div>
    </div>
  </div>

  <div class="border rounded-md p-4 border-gray-300 dark:border-gray-700">
    <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Authentication</h3>

    <!-- None authentication - no fields -->
    <div class="auth-method-field none-field">
      <p class="text-gray-500 dark:text-gray-400">No authentication will be used for this endpoint.</p>
    </div>
    
    <!-- Token authentication -->
    <div class="auth-method-field token-field hidden">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :authentication_token, "API Token", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <%= form.text_field :authentication_token, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        </div>

        <div>
          <%= form.label :api_key_name, "API Key Header Name", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <%= form.text_field :api_key_name, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Examples: X-API-Key, Authorization, etc.</p>
        </div>
      </div>

      <div class="mt-4">
        <%= form.label :api_key_location, "API Key Location", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.select :api_key_location, [["Header", "header"], ["Query Parameter", "query"]], {}, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
      </div>
    </div>
    
    <!-- Basic Auth authentication -->
    <div class="auth-method-field basic_auth-field hidden">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :username, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <%= form.text_field :username, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        </div>

        <div>
          <%= form.label :password, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <%= form.password_field :password, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        </div>
      </div>
    </div>
    
    <!-- OAuth2 authentication -->
    <div class="auth-method-field oauth2-field hidden">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :client_id, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <%= form.text_field :client_id, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        </div>

        <div>
          <%= form.label :client_secret, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <%= form.password_field :client_secret, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        </div>
      </div>

      <div class="mt-4">
        <%= form.label :token_url, "Token Endpoint URL", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.text_field :token_url, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">URL to request OAuth tokens.</p>
      </div>

      <div class="mt-4">
        <%= form.label :refresh_token, "Refresh Token (Optional)", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.text_field :refresh_token, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">If not provided, client credentials flow will be used.</p>
      </div>
    </div>
    
    <!-- JWT authentication -->
    <div class="auth-method-field jwt-field hidden">
      <p class="text-yellow-500">JWT authentication is coming soon. Please use headers for JWT authentication for now.</p>
    </div>
  </div>

  <div>
    <%= form.label :template, "JSON Template (optional)", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
    <%= form.text_area :template, rows: 5, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 font-mono dark:bg-gray-800 dark:border-gray-700 dark:text-white", placeholder: '{"field1": "{field1}", "nested": {"field2": "{field2}"}}' %>
    <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Use {fieldName} placeholders for dynamic values. If empty, a default format will be used based on the field mappings.</p>
  </div>
  
  <div class="border rounded-md p-4 border-gray-300 dark:border-gray-700 mb-6">
    <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Response Configuration</h3>
    
    <div data-controller="response-mapping">
      <%= form.hidden_field :response_mapping, data: { response_mapping_target: "responseMapping" } %>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
        <div>
          <%= form.label :ping_id_field, "Ping ID Response Field", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <%= form.text_field :ping_id_field, placeholder: "response.data.ping_id", class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Field path in the ping response that contains the request ID (use dot notation)</p>
        </div>
        
        <div>
          <%= form.label :ping_id_target_field, "Ping ID Post Field", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <%= form.text_field :ping_id_target_field, placeholder: "request.ping_id", class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Field in post request payload where ping ID should be included (use dot notation for nested fields)</p>
        </div>
      </div>
      
      <div class="mb-6">
        <h4 class="text-md font-medium text-gray-800 dark:text-white mb-2">Response Interpretation</h4>
        <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
          Configure how responses are interpreted. By default, HTTP 2xx status codes are considered success.
          Use this section to define custom criteria for success or failure based on response content.
        </p>
        
        <div class="space-y-4" data-response-mapping-target="container">
          <div class="border border-gray-200 dark:border-gray-700 rounded-md p-4">
            <h5 class="font-medium text-gray-700 dark:text-gray-300 mb-2">Success Criteria - HTTP Status Codes</h5>
            <p class="text-xs text-gray-500 dark:text-gray-400 mb-3">Define which HTTP status code ranges indicate success</p>
            
            <div data-response-mapping-target="statusCodes" class="mb-2">
              <!-- Status code ranges will be inserted here -->
            </div>
            
            <button type="button" data-response-mapping-target="addStatusButton" data-action="click->response-mapping#addStatusCode" 
                    class="mt-1 inline-flex items-center px-2 py-1 border border-transparent text-xs leading-4 font-medium rounded text-primary-600 bg-primary-100 hover:bg-primary-200 dark:bg-primary-900/20 dark:text-primary-300 dark:hover:bg-primary-900/30">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
              </svg>
              Add Status Range
            </button>
          </div>
          
          <div class="border border-gray-200 dark:border-gray-700 rounded-md p-4">
            <h5 class="font-medium text-gray-700 dark:text-gray-300 mb-2">Success Criteria - Response Fields</h5>
            <p class="text-xs text-gray-500 dark:text-gray-400 mb-3">
              Define field values that must match for a response to be considered successful. 
              All criteria must match for success.
            </p>
            
            <div data-response-mapping-target="fieldCriteria" class="mb-2">
              <!-- Field criteria will be inserted here -->
            </div>
            
            <button type="button" data-response-mapping-target="addFieldButton" data-action="click->response-mapping#addField"
                    class="mt-1 inline-flex items-center px-2 py-1 border border-transparent text-xs leading-4 font-medium rounded text-primary-600 bg-primary-100 hover:bg-primary-200 dark:bg-primary-900/20 dark:text-primary-300 dark:hover:bg-primary-900/30">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
              </svg>
              Add Field Criterion
            </button>
          </div>
          
          <div class="border border-gray-200 dark:border-gray-700 rounded-md p-4">
            <h5 class="font-medium text-gray-700 dark:text-gray-300 mb-2">Error Message Fields</h5>
            <p class="text-xs text-gray-500 dark:text-gray-400 mb-3">
              Define where to look for error messages in the response.
              The first non-empty field found will be used as the error message.
            </p>
            
            <div data-response-mapping-target="errorFields" class="mb-2">
              <!-- Error fields will be inserted here -->
            </div>
            
            <button type="button" data-response-mapping-target="addErrorButton" data-action="click->response-mapping#addError"
                    class="mt-1 inline-flex items-center px-2 py-1 border border-transparent text-xs leading-4 font-medium rounded text-primary-600 bg-primary-100 hover:bg-primary-200 dark:bg-primary-900/20 dark:text-primary-300 dark:hover:bg-primary-900/30">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
              </svg>
              Add Error Field
            </button>
          </div>
          
          <div class="border border-gray-200 dark:border-gray-700 rounded-md p-4">
            <h5 class="font-medium text-gray-700 dark:text-gray-300 mb-2">Test Response Configuration</h5>
            <p class="text-xs text-gray-500 dark:text-gray-400 mb-3">
              Test your configuration with a sample JSON response.
            </p>
            
            <div class="mb-3">
              <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Sample JSON Response</label>
              <textarea data-response-mapping-target="testResponse" rows="5" placeholder='{"status":"success","data":{"id":"12345"}}'
                      class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white font-mono text-sm"></textarea>
            </div>
            
            <button type="button" data-action="click->response-mapping#testResponseMapping"
                   class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
              </svg>
              Test Mapping
            </button>
            
            <div data-response-mapping-target="testResult">
              <!-- Test results will be displayed here -->
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="border rounded-md p-4 border-gray-300 dark:border-gray-700">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg font-medium text-gray-900 dark:text-white">Bidding Configuration</h3>
      <%= link_to lead_bidding_docs_path, class: "text-sm text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300", target: "_blank" do %>
        <span>View bidding documentation</span>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 inline ml-1" viewBox="0 0 20 20" fill="currentColor">
          <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
          <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
        </svg>
      <% end %>
    </div>

    <div class="space-y-4">
      <div>
        <%= form.label :bidding_strategy, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.select :bidding_strategy, Distribution.bidding_strategies.keys.map { |s| [s.titleize, s] }, {}, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Determine how bid amounts are calculated for each lead.</p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div>
          <%= form.label :base_bid_amount, "Base Bid Amount ($)", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <div class="mt-1 relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <span class="text-gray-500 sm:text-sm">$</span>
            </div>
            <%= form.number_field :base_bid_amount, step: "0.01", min: "0", placeholder: "0.00", class: "pl-7 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
          </div>
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Default bid for all leads</p>
        </div>

        <div>
          <%= form.label :min_bid_amount, "Minimum Bid ($)", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <div class="mt-1 relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <span class="text-gray-500 sm:text-sm">$</span>
            </div>
            <%= form.number_field :min_bid_amount, step: "0.01", min: "0", placeholder: "0.00", class: "pl-7 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
          </div>
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Lowest amount to bid (optional)</p>
        </div>

        <div>
          <%= form.label :max_bid_amount, "Maximum Bid ($)", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
          <div class="mt-1 relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <span class="text-gray-500 sm:text-sm">$</span>
            </div>
            <%= form.number_field :max_bid_amount, step: "0.01", min: "0", placeholder: "0.00", class: "pl-7 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
          </div>
          <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Highest amount to bid (optional)</p>
        </div>
      </div>

      <div>
        <%= form.label :bid_endpoint_url, "Bid Endpoint URL (optional)", class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
        <%= form.text_field :bid_endpoint_url, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white" %>
        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">Use a different URL for bid requests. If empty, the main endpoint URL will be used.</p>
      </div>

      <div class="bg-blue-50 dark:bg-blue-900/30 border-l-2 border-blue-500 dark:border-blue-700 p-3 text-sm text-blue-700 dark:text-blue-300">
        <p><strong>How Bidding Works:</strong> When a lead is submitted to a ping-post campaign, this distribution will receive anonymized lead data and can submit a bid. If your bid wins, the complete lead data will be sent to your endpoint.</p>
      </div>
    </div>
  </div>

  <div class="border rounded-md p-4 border-gray-300 dark:border-gray-700">
    <div class="flex justify-between items-center mb-2">
      <h3 class="text-lg font-medium text-gray-900 dark:text-white">HTTP Headers</h3>
    </div>
    
    <p class="text-sm text-gray-500 dark:text-gray-400 mb-4">
      Add custom HTTP headers that will be sent with each request to this distribution. Common headers include <code class="px-1 py-0.5 bg-gray-100 dark:bg-gray-700 rounded text-xs">Content-Type</code>, <code class="px-1 py-0.5 bg-gray-100 dark:bg-gray-700 rounded text-xs">Authorization</code>, or <code class="px-1 py-0.5 bg-gray-100 dark:bg-gray-700 rounded text-xs">X-API-Key</code>.
    </p>

    <div id="headers" class="space-y-4">
      <% if form.object.headers.reject(&:marked_for_destruction?).empty? %>
        <div class="text-center py-6 bg-gray-50 dark:bg-gray-700 rounded-lg border border-dashed border-gray-300 dark:border-gray-600 mb-4" id="empty-headers-placeholder">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 mx-auto text-gray-400 dark:text-gray-500 mb-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
          </svg>
          <p class="text-gray-500 dark:text-gray-400 mb-1">No HTTP headers defined yet</p>
          <p class="text-sm text-gray-400 dark:text-gray-500">Click "Add Header" below to add your first header</p>
        </div>
      <% end %>
      
      <%= form.fields_for :headers do |header_form| %>
        <div class="nested-fields grid grid-cols-5 gap-4" data-header-id="<%= header_form.object.id || 'new' %>">
          <div class="col-span-2">
            <%= header_form.label :name, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
            <%= header_form.text_field :name, list: "common_headers", class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white header-name", placeholder: "Header name" %>
          </div>
          
          <div class="col-span-2">
            <%= header_form.label :value, class: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" %>
            <%= header_form.text_field :value, class: "block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white header-value", placeholder: "Header value" %>
          </div>
          
          <div class="flex items-end">
            <%= header_form.hidden_field :id if header_form.object.persisted? %>
            <%= header_form.check_box :_destroy, class: "hidden destroy-flag" %>
            <button type="button" class="remove-header px-3 py-2 text-sm text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300" aria-label="Remove header" title="Remove header">
              <i class="fas fa-trash-alt"></i>
            </button>
          </div>
        </div>
      <% end %>
    </div>

    <datalist id="common_headers">
      <% Header.common_headers.each do |header| %>
        <option value="<%= header %>">
      <% end %>
    </datalist>

    <div class="mt-4">
      <button type="button" id="add-header" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
        <i class="fas fa-plus-circle mr-2"></i>
        Add Header
      </button>
    </div>
  </div>

  <div class="flex justify-end space-x-3">
    <%= link_to "Cancel", distributions_path, class: "btn btn-secondary" %>
    <%= form.submit class: "btn btn-primary" %>
  </div>
<% end %>

<script>
  // Initialize on page load
  document.addEventListener('turbo:load', initializeHeadersForm);
  document.addEventListener('DOMContentLoaded', initializeHeadersForm);
  
  function initializeHeadersForm() {
    // Setup add header button
    initAddHeaderButton();
    
    // Setup remove button for each header
    document.querySelectorAll('.remove-header').forEach(button => {
      button.removeAttribute('data-initialized');
      attachRemoveListener(button);
    });
  }
  
  function initAddHeaderButton() {
    const addButton = document.getElementById('add-header');
    if (!addButton) return;
    
    // Remove existing listeners by cloning
    const newAddButton = addButton.cloneNode(true);
    addButton.parentNode.replaceChild(newAddButton, addButton);
    
    // Add click listener
    newAddButton.addEventListener('click', function() {
      addNewHeader();
      
      // Scroll and focus
      const headersContainer = document.getElementById('headers');
      setTimeout(() => {
        headersContainer.scrollIntoView({ behavior: 'smooth', block: 'end' });
        const newHeader = headersContainer.lastElementChild;
        const nameInput = newHeader.querySelector('.header-name');
        if (nameInput) nameInput.focus();
      }, 100);
    });
  }
  
  function addNewHeader() {
    const headersContainer = document.getElementById('headers');
    if (!headersContainer) return;
    
    // Remove empty placeholder if exists
    const emptyPlaceholder = document.getElementById('empty-headers-placeholder');
    if (emptyPlaceholder) emptyPlaceholder.remove();
    
    const timestamp = new Date().getTime();
    
    // Create new header HTML
    const newHeaderHtml = `
      <div class="nested-fields grid grid-cols-5 gap-4 animate-fadeIn" data-header-id="new-${timestamp}">
        <div class="col-span-2">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Name</label>
          <input type="text" name="distribution[headers_attributes][${timestamp}][name]" list="common_headers" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white header-name" placeholder="Header name">
        </div>
        <div class="col-span-2">
          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Value</label>
          <input type="text" name="distribution[headers_attributes][${timestamp}][value]" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-300 focus:ring focus:ring-primary-200 focus:ring-opacity-50 dark:bg-gray-800 dark:border-gray-700 dark:text-white header-value" placeholder="Header value">
        </div>
        <div class="flex items-end">
          <input type="hidden" name="distribution[headers_attributes][${timestamp}][_destroy]" value="0">
          <input type="checkbox" name="distribution[headers_attributes][${timestamp}][_destroy]" value="0" class="hidden destroy-flag">
          <button type="button" class="remove-header px-3 py-2 text-sm text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300" aria-label="Remove header" title="Remove header">
            <i class="fas fa-trash-alt"></i>
          </button>
        </div>
      </div>
    `;
    
    // Add to DOM
    headersContainer.insertAdjacentHTML('beforeend', newHeaderHtml);
    
    // Set up the remove button
    const newRemoveButton = headersContainer.lastElementChild.querySelector('.remove-header');
    if (newRemoveButton) attachRemoveListener(newRemoveButton);
  }
  
  function attachRemoveListener(button) {
    // Skip if already initialized
    if (button.getAttribute('data-initialized') === 'true') return;
    
    // Mark as initialized
    button.setAttribute('data-initialized', 'true');
    
    // Create a clean button without event listeners
    const newButton = button.cloneNode(true);
    button.parentNode.replaceChild(newButton, button);
    
    // Add event listener to handle removal
    newButton.addEventListener('click', handleHeaderRemoval);
  }
  
  function handleHeaderRemoval(event) {
    const button = event.currentTarget;
    const headerRow = button.closest('.nested-fields');
    const destroyCheckbox = headerRow.querySelector('input[type="checkbox"].destroy-flag');
    
    if (!destroyCheckbox) {
      // New record, just remove from DOM
      headerRow.remove();
      return;
    }
    
    // Toggle the removal state
    if (destroyCheckbox.checked) {
      // Undo the removal
      destroyCheckbox.checked = false;
      destroyCheckbox.value = "0";
      headerRow.classList.remove('bg-red-50', 'dark:bg-red-900/20', 'opacity-70');
      headerRow.querySelectorAll('input.header-name, input.header-value').forEach(input => {
        input.classList.remove('line-through');
        input.disabled = false;
      });
      button.setAttribute('title', 'Remove header');
      button.innerHTML = '<i class="fas fa-trash-alt"></i>';
    } else {
      // Mark for removal
      destroyCheckbox.checked = true;
      destroyCheckbox.value = "1";
      headerRow.classList.add('bg-red-50', 'dark:bg-red-900/20', 'opacity-70');
      headerRow.querySelectorAll('input.header-name, input.header-value').forEach(input => {
        input.classList.add('line-through');
        input.disabled = true;
      });
      button.setAttribute('title', 'Undo removal');
      button.innerHTML = '<i class="fas fa-undo"></i>';
    }
  }
</script>
<% content_for :title, "Source Analysis: #{@source.name}" %>
<% content_for :head do %>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
<% end %>

<div class="container mx-auto px-4 py-8">
  <div class="mb-6">
    <div class="flex justify-between items-center mb-4">
      <div>
        <h1 class="text-2xl font-bold text-gray-900"><%= @source.name %> Performance</h1>
        <p class="text-gray-600">Company: <%= @source.company.name %></p>
      </div>
      
      <div class="flex gap-2">
        <%= link_to reports_sources_path, class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50" do %>
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back to All Sources
        <% end %>

        <%= form_with url: reports_source_path(@source), method: :get, data: { turbo_frame: "_top" }, class: "inline-flex" do |f| %>
          <%= f.select :period_type, 
                      options_for_select([
                        ["Hourly", "hourly"],
                        ["Daily", "daily"],
                        ["Weekly", "weekly"],
                        ["Monthly", "monthly"]
                      ], @period_type),
                      {}, 
                      { class: "ml-2 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md",
                        onchange: "this.form.submit();" } %>
        <% end %>
      </div>
    </div>
    
    <!-- Key Metrics Section -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Lead Volume</h3>
        <p class="text-3xl font-bold text-gray-900"><%= number_with_delimiter(@source_metrics[:volume]) %></p>
        <p class="text-sm text-gray-600 mt-1">During selected time period</p>
      </div>
      
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Acceptance Rate</h3>
        <p class="text-3xl font-bold text-gray-900"><%= number_to_percentage(@source_metrics[:acceptance_rate], precision: 1) %></p>
        <p class="text-sm text-gray-600 mt-1"><%= @source_metrics[:accepted_leads] %> accepted of <%= @source_metrics[:volume] %> total</p>
      </div>
      
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Profit Per Lead</h3>
        <p class="text-3xl font-bold text-gray-900"><%= number_to_currency(@source_metrics[:profit_per_lead]) %></p>
        <p class="text-sm text-gray-600 mt-1">Avg revenue: <%= number_to_currency(@source_metrics[:avg_bid_amount]) %></p>
      </div>
    </div>
    
    <!-- Financial Metrics Section -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Total Revenue</h3>
        <p class="text-2xl font-bold text-gray-900"><%= number_to_currency(@source_metrics[:total_revenue]) %></p>
      </div>
      
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Total Cost</h3>
        <p class="text-2xl font-bold text-gray-900"><%= number_to_currency(@source_metrics[:total_cost]) %></p>
      </div>
      
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Total Profit</h3>
        <p class="text-2xl font-bold text-gray-900"><%= number_to_currency(@source_metrics[:total_profit]) %></p>
      </div>
      
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">ROI</h3>
        <p class="text-2xl font-bold text-gray-900"><%= number_to_percentage(@source_metrics[:roi], precision: 1) %></p>
      </div>
    </div>
    
    <!-- Bid Metrics Section -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Average Bid Amount</h3>
        <p class="text-2xl font-bold text-gray-900"><%= number_to_currency(@source_metrics[:avg_bid_amount]) %></p>
        <div class="flex justify-between text-sm text-gray-600 mt-2">
          <span>Min: <%= number_to_currency(@source_metrics[:min_bid_amount]) %></span>
          <span>Max: <%= number_to_currency(@source_metrics[:max_bid_amount]) %></span>
        </div>
      </div>
      
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Response Time</h3>
        <p class="text-2xl font-bold text-gray-900"><%= @source_metrics[:avg_response_time] ? "#{@source_metrics[:avg_response_time]} sec" : "N/A" %></p>
        <p class="text-sm text-gray-600 mt-1">Average time from request to bid</p>
      </div>
      
      <div class="bg-white rounded-lg shadow p-4">
        <h3 class="text-sm font-medium text-gray-500 uppercase mb-1">Compliance Rate</h3>
        <p class="text-2xl font-bold text-gray-900"><%= number_to_percentage(@compliance_metrics[:compliance_rate], precision: 1) %></p>
        <p class="text-sm text-gray-600 mt-1"><%= @compliance_metrics[:compliance_count] %> compliant of <%= @compliance_metrics[:total_leads] %> total</p>
      </div>
    </div>
    
    <!-- Time Series Visualization -->
    <div class="bg-white rounded-lg shadow p-6 mb-6">
      <div class="flex justify-between items-center mb-4">
        <h3 class="text-lg font-medium text-gray-900">Performance Over Time</h3>
        <div class="flex gap-2">
          <button class="time-chart-toggle px-3 py-1 text-sm rounded-md bg-indigo-100 text-indigo-800 font-medium" data-chart="volume">Volume</button>
          <button class="time-chart-toggle px-3 py-1 text-sm rounded-md bg-gray-100 text-gray-600 hover:bg-indigo-100 hover:text-indigo-800 font-medium" data-chart="acceptance_rate">Acceptance</button>
          <button class="time-chart-toggle px-3 py-1 text-sm rounded-md bg-gray-100 text-gray-600 hover:bg-indigo-100 hover:text-indigo-800 font-medium" data-chart="avg_bid_amount">Bid Amount</button>
        </div>
      </div>
      
      <div class="chart-container" style="height: 300px;">
        <canvas id="timeSeriesChart"></canvas>
      </div>
    </div>
    
    <!-- Compliance Metrics Section -->
    <div class="bg-white rounded-lg shadow p-6 mb-6">
      <h3 class="text-lg font-medium text-gray-900 mb-4">Compliance Metrics</h3>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div>
          <h4 class="text-sm font-medium text-gray-500 uppercase mb-1">Consent Rate</h4>
          <p class="text-2xl font-bold text-gray-900"><%= number_to_percentage(@compliance_metrics[:consent_rate], precision: 1) %></p>
          <p class="text-sm text-gray-600 mt-1"><%= @compliance_metrics[:consent_count] %> consents recorded</p>
        </div>
        
        <div>
          <h4 class="text-sm font-medium text-gray-500 uppercase mb-1">Data Access Events</h4>
          <p class="text-2xl font-bold text-gray-900"><%= @compliance_metrics[:data_access_count] %></p>
          <p class="text-sm text-gray-600 mt-1">Total data access requests</p>
        </div>
        
        <div>
          <h4 class="text-sm font-medium text-gray-500 uppercase mb-1">Overall Compliance</h4>
          <p class="text-2xl font-bold text-gray-900"><%= number_to_percentage(@compliance_metrics[:compliance_rate], precision: 1) %></p>
          <p class="text-sm text-gray-600 mt-1"><%= @compliance_metrics[:compliance_count] %> compliant leads</p>
        </div>
      </div>
    </div>
    
    <!-- Lead Activity Preview -->
    <div class="bg-white rounded-lg shadow overflow-hidden">
      <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
        <h3 class="text-lg font-medium text-gray-900">Recent Leads</h3>
        <%= link_to "View All Leads", leads_path(source_id: @source.id), class: "text-indigo-600 hover:text-indigo-900" %>
      </div>
      
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Bid Amount</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Compliance</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"></th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            <% @leads.order(created_at: :desc).limit(10).each do |lead| %>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"><%= lead.id %></td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= lead.created_at.strftime("%b %d, %Y %H:%M") %></td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <% if lead.bid_request&.status == 'accepted' %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">Accepted</span>
                  <% elsif lead.bid_request&.status == 'rejected' %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">Rejected</span>
                  <% elsif lead.bid_request&.status == 'expired' %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-orange-100 text-orange-800">Expired</span>
                  <% else %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">No Bid</span>
                  <% end %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <% if bid = lead.bid_request&.bids&.where(status: 'accepted')&.first %>
                    <%= number_to_currency(bid.amount) %>
                  <% else %>
                    N/A
                  <% end %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <% if ComplianceRecord.exists?(record_type: 'Lead', record_id: lead.id) %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">Compliant</span>
                  <% else %>
                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">Non-Compliant</span>
                  <% end %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <%= link_to "View", lead_path(lead), class: "text-indigo-600 hover:text-indigo-900" %>
                </td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('turbo:load', function() {
    const timeCtx = document.getElementById('timeSeriesChart').getContext('2d');
    let timeSeriesChart = null;
    
    // Chart data from controller
    const timeSeriesData = <%= raw @time_series_data.to_json %>;
    
    // Function to create/update time series chart
    function updateTimeSeriesChart(dataType) {
      // Clear previous chart if it exists
      if (timeSeriesChart) {
        timeSeriesChart.destroy();
      }
      
      // Update active button state
      document.querySelectorAll('.time-chart-toggle').forEach(button => {
        if (button.dataset.chart === dataType) {
          button.classList.add('bg-indigo-100', 'text-indigo-800');
          button.classList.remove('bg-gray-100', 'text-gray-600');
        } else {
          button.classList.remove('bg-indigo-100', 'text-indigo-800');
          button.classList.add('bg-gray-100', 'text-gray-600');
        }
      });
      
      // Configure chart based on data type
      let chartConfig = {
        type: 'line',
        data: {
          labels: timeSeriesData.labels,
          datasets: [{
            label: getTimeChartLabel(dataType),
            data: timeSeriesData[dataType],
            borderColor: 'rgb(79, 70, 229)',
            backgroundColor: 'rgba(79, 70, 229, 0.2)',
            fill: true,
            tension: 0.1
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              display: false
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  let value = context.raw;
                  return formatTimeValue(value, dataType);
                }
              }
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                callback: function(value) {
                  return formatTimeValue(value, dataType, true);
                }
              }
            }
          }
        }
      };
      
      // Create new chart
      timeSeriesChart = new Chart(timeCtx, chartConfig);
    }
    
    // Format values based on data type
    function formatTimeValue(value, dataType, isAxis = false) {
      switch(dataType) {
        case 'volume':
          return value.toLocaleString();
        case 'acceptance_rate':
          return value.toFixed(1) + '%';
        case 'avg_bid_amount':
          return '$' + value.toFixed(2);
        default:
          return value;
      }
    }
    
    // Get chart label based on data type
    function getTimeChartLabel(dataType) {
      switch(dataType) {
        case 'volume':
          return 'Lead Volume';
        case 'acceptance_rate':
          return 'Acceptance Rate (%)';
        case 'avg_bid_amount':
          return 'Average Bid Amount';
        default:
          return dataType;
      }
    }
    
    // Initialize chart with volume data
    updateTimeSeriesChart('volume');
    
    // Add event listeners for toggling charts
    document.querySelectorAll('.time-chart-toggle').forEach(button => {
      button.addEventListener('click', function() {
        updateTimeSeriesChart(this.dataset.chart);
      });
    });
  });
</script>
<% content_for :title, @title %>
<% content_for :head do %>
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
<% end %>

<% 
  breadcrumbs = [
    { title: "Home", path: root_path },
    { title: "Bidding", path: bid_dashboard_path }
  ]
  
  if @campaign.present?
    breadcrumbs << { title: @campaign.name, path: campaign_path(@campaign) }
  end
  
  breadcrumbs << { title: "Buyer Performance", active: true }
  
  content_for :breadcrumbs do
    render partial: "shared/breadcrumbs", locals: { breadcrumbs: breadcrumbs }
  end
%>

<div class="container mx-auto px-4 py-8">
  <div class="mb-6">
    <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-4"><%= @title %></h1>
    
    <!-- Filters Section -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4 mb-6">
      <%= form_with url: reports_buyers_path, method: :get, data: { turbo_frame: "_top" }, class: "flex flex-wrap items-end gap-4" do |f| %>
        <div>
          <%= f.label :period_type, "Time Period", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= f.select :period_type, 
                      options_for_select([
                        ["Hourly", "hourly"],
                        ["Daily", "daily"],
                        ["Weekly", "weekly"],
                        ["Monthly", "monthly"]
                      ], @period_type),
                      {}, 
                      { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" } %>
        </div>
        
        <div>
          <%= f.label :campaign_id, "Campaign", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= f.select :campaign_id, 
                      options_from_collection_for_select(Campaign.all, :id, :name, @campaign_id),
                      { include_blank: "All Campaigns" }, 
                      { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" } %>
        </div>
        
        <div>
          <%= f.label :sort_by, "Sort By", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= f.select :sort_by, 
                      options_for_select([
                        ["Bids Placed", "bids_placed"],
                        ["Win Rate", "win_rate"],
                        ["Avg Bid Amount", "avg_bid_amount"],
                        ["Total Spend", "total_spend"],
                        ["Response Time", "avg_response_time"],
                        ["Campaign Engagement", "campaign_engagement"]
                      ], @sort_by),
                      {}, 
                      { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" } %>
        </div>
        
        <div>
          <%= f.label :sort_direction, "Direction", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= f.select :sort_direction, 
                      options_for_select([
                        ["Highest First", "desc"],
                        ["Lowest First", "asc"]
                      ], @sort_direction),
                      {}, 
                      { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" } %>
        </div>
        
        <%= f.submit "Apply Filters", class: "px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
      <% end %>
    </div>
    
    <!-- Top Buyers Summary -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
      <!-- Top Buyers by Bid Volume -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-3">Top Buyers by Bids Placed</h3>
        <% if @top_buyers_by_bids.present? %>
          <ul class="space-y-2">
            <% @top_buyers_by_bids.each do |buyer| %>
              <li class="flex justify-between">
                <span class="font-medium"><%= link_to buyer[:name], reports_buyer_path(buyer[:id]), class: "text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300" %></span>
                <span class="text-gray-700 dark:text-gray-300"><%= number_with_delimiter(buyer[:bids_placed]) %> bids</span>
              </li>
            <% end %>
          </ul>
        <% else %>
          <p class="text-gray-500 dark:text-gray-400 italic">No data available</p>
        <% end %>
      </div>
      
      <!-- Top Buyers by Win Rate -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-3">Top Buyers by Win Rate</h3>
        <% if @top_buyers_by_win_rate.present? %>
          <ul class="space-y-2">
            <% @top_buyers_by_win_rate.each do |buyer| %>
              <li class="flex justify-between">
                <span class="font-medium"><%= link_to buyer[:name], reports_buyer_path(buyer[:id]), class: "text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300" %></span>
                <span class="text-gray-700 dark:text-gray-300"><%= number_to_percentage(buyer[:win_rate], precision: 1) %></span>
              </li>
            <% end %>
          </ul>
        <% else %>
          <p class="text-gray-500 dark:text-gray-400 italic">No data available</p>
        <% end %>
      </div>
      
      <!-- Top Buyers by Avg Bid Amount -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-4">
        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-3">Top Buyers by Avg Bid Amount</h3>
        <% if @top_buyers_by_avg_amount.present? %>
          <ul class="space-y-2">
            <% @top_buyers_by_avg_amount.each do |buyer| %>
              <li class="flex justify-between">
                <span class="font-medium"><%= link_to buyer[:name], reports_buyer_path(buyer[:id]), class: "text-indigo-600 hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-300" %></span>
                <span class="text-gray-700 dark:text-gray-300"><%= number_to_currency(buyer[:avg_bid_amount]) %></span>
              </li>
            <% end %>
          </ul>
        <% else %>
          <p class="text-gray-500 dark:text-gray-400 italic">No data available</p>
        <% end %>
      </div>
    </div>
    
    <!-- Main Visualization Section -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6">
      <div class="flex justify-between items-center mb-4">
        <h3 class="text-lg font-medium text-gray-900 dark:text-white">Buyer Performance Comparison</h3>
        <div class="flex flex-wrap gap-2">
          <button class="chart-toggle px-3 py-1 text-sm rounded-md bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200 font-medium" data-chart="bids_placed">Bid Volume</button>
          <button class="chart-toggle px-3 py-1 text-sm rounded-md bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 hover:bg-indigo-100 hover:text-indigo-800 dark:hover:bg-indigo-900 dark:hover:text-indigo-200 font-medium" data-chart="win_rate">Win Rate</button>
          <button class="chart-toggle px-3 py-1 text-sm rounded-md bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 hover:bg-indigo-100 hover:text-indigo-800 dark:hover:bg-indigo-900 dark:hover:text-indigo-200 font-medium" data-chart="avg_bid_amount">Bid Amount</button>
          <button class="chart-toggle px-3 py-1 text-sm rounded-md bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 hover:bg-indigo-100 hover:text-indigo-800 dark:hover:bg-indigo-900 dark:hover:text-indigo-200 font-medium" data-chart="response_time">Response Time</button>
          <button class="chart-toggle px-3 py-1 text-sm rounded-md bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 hover:bg-indigo-100 hover:text-indigo-800 dark:hover:bg-indigo-900 dark:hover:text-indigo-200 font-medium" data-chart="campaign_engagement">Campaigns</button>
        </div>
      </div>
      
      <div class="chart-container" style="height: 300px;">
        <canvas id="buyerComparisonChart"></canvas>
      </div>
    </div>
    
    <!-- Buyers Data Table -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden">
      <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700">
        <h3 class="text-lg font-medium text-gray-900 dark:text-white">Buyer Performance Details</h3>
      </div>
      
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          <thead class="bg-gray-50 dark:bg-gray-700">
            <tr>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Buyer</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Company</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Bids Placed</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Win Rate</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Avg. Bid Amount</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Total Spend</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Avg Response Time</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">Campaigns</th>
              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"></th>
            </tr>
          </thead>
          <tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
            <% if @buyer_metrics.present? %>
              <% @buyer_metrics.each do |buyer| %>
                <tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"><%= buyer[:name] %></td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"><%= buyer[:company_name] %></td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"><%= number_with_delimiter(buyer[:bids_placed]) %></td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"><%= number_to_percentage(buyer[:win_rate], precision: 1) %></td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"><%= number_to_currency(buyer[:avg_bid_amount]) %></td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"><%= number_to_currency(buyer[:total_spend]) %></td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"><%= buyer[:avg_response_time] ? "#{buyer[:avg_response_time]} sec" : "N/A" %></td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400"><%= buyer[:campaign_engagement] %></td>
                  <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    <%= link_to "View Details", reports_buyer_path(buyer[:id]), class: "text-indigo-600 hover:text-indigo-900 dark:text-indigo-400 dark:hover:text-indigo-300" %>
                  </td>
                </tr>
              <% end %>
            <% else %>
              <tr>
                <td colspan="9" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400 text-center italic">No data available</td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<script>
  // Function to initialize and set up the chart
  function initializeChart() {
    const chartElement = document.getElementById('buyerComparisonChart');
    if (!chartElement) return;
    
    const ctx = chartElement.getContext('2d');
    let currentChart = null;
    
    // Chart data from controller
    const chartData = <%= raw @chart_data.to_json %>;
    
    // Check if dark mode is active
    const isDarkMode = document.documentElement.classList.contains('dark');
    
    // Function to create/update chart
    function updateChart(dataType) {
      // Clear previous chart if it exists
      if (currentChart) {
        currentChart.destroy();
      }
      
      // Update active button state
      document.querySelectorAll('.chart-toggle').forEach(button => {
        if (button.dataset.chart === dataType) {
          button.classList.add(isDarkMode ? 'bg-indigo-900' : 'bg-indigo-100');
          button.classList.add(isDarkMode ? 'text-indigo-200' : 'text-indigo-800');
          button.classList.remove(isDarkMode ? 'bg-gray-700' : 'bg-gray-100');
          button.classList.remove(isDarkMode ? 'text-gray-300' : 'text-gray-600');
        } else {
          button.classList.remove(isDarkMode ? 'bg-indigo-900' : 'bg-indigo-100');
          button.classList.remove(isDarkMode ? 'text-indigo-200' : 'text-indigo-800');
          button.classList.add(isDarkMode ? 'bg-gray-700' : 'bg-gray-100');
          button.classList.add(isDarkMode ? 'text-gray-300' : 'text-gray-600');
        }
      });
      
      // Ensure chartData and required properties exist
      if (!chartData || !chartData[dataType] || !chartData[dataType].labels || !chartData[dataType].data) {
        console.error("Missing chart data for", dataType);
        return;
      }
      
      // Configure chart based on data type
      let chartConfig = {
        type: 'bar',
        data: {
          labels: chartData[dataType].labels,
          datasets: [{
            label: getChartLabel(dataType),
            data: chartData[dataType].data,
            backgroundColor: isDarkMode ? 'rgba(129, 140, 248, 0.6)' : 'rgba(79, 70, 229, 0.6)',
            borderColor: isDarkMode ? 'rgba(129, 140, 248, 1)' : 'rgba(79, 70, 229, 1)',
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false,
          plugins: {
            legend: {
              display: false,
              labels: {
                color: isDarkMode ? '#e5e7eb' : '#374151' // text color for legend in dark mode
              }
            },
            tooltip: {
              callbacks: {
                label: function(context) {
                  let value = context.raw;
                  return formatValue(value, dataType);
                }
              },
              backgroundColor: isDarkMode ? 'rgba(55, 65, 81, 0.9)' : 'rgba(255, 255, 255, 0.9)',
              titleColor: isDarkMode ? '#e5e7eb' : '#111827',
              bodyColor: isDarkMode ? '#e5e7eb' : '#374151',
              borderColor: isDarkMode ? 'rgba(75, 85, 99, 0.2)' : 'rgba(209, 213, 219, 0.5)',
              borderWidth: 1
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              ticks: {
                color: isDarkMode ? '#d1d5db' : '#6b7280', // text color for y-axis in dark mode
                callback: function(value) {
                  return formatValue(value, dataType, true);
                }
              },
              grid: {
                color: isDarkMode ? 'rgba(75, 85, 99, 0.2)' : 'rgba(209, 213, 219, 0.5)'
              }
            },
            x: {
              ticks: {
                color: isDarkMode ? '#d1d5db' : '#6b7280' // text color for x-axis in dark mode
              },
              grid: {
                display: false
              }
            }
          }
        }
      };
      
      // Create new chart
      currentChart = new Chart(ctx, chartConfig);
    }
    
    // Format values based on data type
    function formatValue(value, dataType, isAxis = false) {
      switch(dataType) {
        case 'bids_placed':
          return value.toLocaleString();
        case 'win_rate':
          return value.toFixed(1) + '%';
        case 'avg_bid_amount':
          return '$' + value.toFixed(2);
        case 'response_time':
          return value.toFixed(2) + ' sec';
        case 'campaign_engagement':
          return value.toLocaleString();
        default:
          return value;
      }
    }
    
    // Get chart label based on data type
    function getChartLabel(dataType) {
      switch(dataType) {
        case 'bids_placed':
          return 'Number of Bids';
        case 'win_rate':
          return 'Win Rate (%)';
        case 'avg_bid_amount':
          return 'Average Bid Amount';
        case 'response_time':
          return 'Avg Response Time (sec)';
        case 'campaign_engagement':
          return 'Campaign Engagement';
        default:
          return dataType;
      }
    }
    
    // Only initialize if we have data
    if (Object.keys(chartData).length > 0) {
      // Initialize chart with bids data
      updateChart('bids_placed');
      
      // Add event listeners for toggling charts
      document.querySelectorAll('.chart-toggle').forEach(button => {
        button.addEventListener('click', function() {
          updateChart(this.dataset.chart);
        });
      });
    }
  }
  
  // Initialize on page load and turbo navigation
  document.addEventListener('turbo:load', initializeChart);
  
  // Also initialize immediately in case we're not using turbo navigation
  initializeChart();
</script>
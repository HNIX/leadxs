<%= form_with(model: [campaign, campaign_field], data: { controller: "toggle" }) do |form| %>
  <div class="space-y-6">
    <% if campaign_field.errors.any? %>
      <div class="bg-red-50 dark:bg-red-900/50 border border-red-400 dark:border-red-800 text-red-700 dark:text-red-300 px-4 py-3 rounded relative">
        <h2 class="font-medium mb-1"><%= pluralize(campaign_field.errors.count, "error") %> prohibited this field from being saved:</h2>
        <ul class="list-disc list-inside text-sm">
          <% campaign_field.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <%= form.label :name, class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
        <%= form.text_field :name, class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
      </div>

      <div>
        <%= form.label :label, class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
        <%= form.text_field :label, class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <%= form.label :field_type, class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
        <%= form.select :field_type, 
                      CampaignField::FIELD_TYPES.map { |ft| [ft.humanize, ft] }, 
                      { include_blank: "Select field type" }, 
                      { 
                        class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500",
                        data: { 
                          action: "change->toggle#toggle",
                          toggle_target: "controller" 
                        }
                      } %>
      </div>

      <div>
        <%= form.label :value_acceptance, "Value Type", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
        <%= form.select :value_acceptance, 
                      [["Any Value", "any"], ["List of Options", "list"], ["Range", "range"]], 
                      {}, 
                      { 
                        class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500"
                      } %>
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <%= form.label :description, class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
        <%= form.text_area :description, rows: 3, class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
      </div>

      <div class="space-y-4">
        <div>
          <%= form.label :default_value, class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= form.text_field :default_value, class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
        </div>
        
        <div>
          <%= form.label :example_value, class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= form.text_field :example_value, class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
        </div>
      </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 border-t border-gray-200 dark:border-gray-600 pt-4">
      <div class="flex items-center">
        <%= form.check_box :required, class: "h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded" %>
        <%= form.label :required, class: "ml-2 block text-sm font-medium text-gray-700 dark:text-gray-300" %>
      </div>
      
      <div class="flex items-center">
        <%= form.check_box :is_pii, class: "h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded" %>
        <%= form.label :is_pii, "Contains PII", class: "ml-2 block text-sm font-medium text-gray-700 dark:text-gray-300" %>
      </div>
      
      <div class="flex items-center">
        <%= form.check_box :hide, class: "h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded" %>
        <%= form.label :hide, "Hide Field", class: "ml-2 block text-sm font-medium text-gray-700 dark:text-gray-300" %>
      </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
      <div class="flex items-center">
        <%= form.check_box :ping_required, class: "h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded" %>
        <%= form.label :ping_required, "Required for Ping", class: "ml-2 block text-sm font-medium text-gray-700 dark:text-gray-300" %>
      </div>
      
      <div class="flex items-center">
        <%= form.check_box :post_required, class: "h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded" %>
        <%= form.label :post_required, "Required for Post", class: "ml-2 block text-sm font-medium text-gray-700 dark:text-gray-300" %>
      </div>
      
      <div class="flex items-center">
        <%= form.check_box :post_only, class: "h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 dark:bg-gray-700 rounded" %>
        <%= form.label :post_only, "Post Only Field", class: "ml-2 block text-sm font-medium text-gray-700 dark:text-gray-300" %>
      </div>
    </div>

    <!-- Validation options for text fields -->
    <div data-toggle-target="toggleable" data-toggle-show-if="text" class="border-t border-gray-200 dark:border-gray-600 pt-6">
      <h3 class="text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4">Text Validation</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :validation_regex, "Validation Regex Pattern", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= form.text_field :validation_regex, class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
          <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Regular expression for validation (optional)</p>
        </div>

        <div class="grid grid-cols-2 gap-4">
          <div>
            <%= form.label :min_length, "Min Length", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
            <%= form.number_field :min_length, min: 0, class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
          </div>
          <div>
            <%= form.label :max_length, "Max Length", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
            <%= form.number_field :max_length, min: 0, class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
          </div>
        </div>
      </div>
    </div>

    <!-- Validation options for number fields -->
    <div data-toggle-target="toggleable" data-toggle-show-if="number" class="border-t border-gray-200 dark:border-gray-600 pt-6">
      <h3 class="text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4">Number Validation</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <%= form.label :min_value, "Min Value", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= form.number_field :min_value, step: "any", class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
        </div>
        <div>
          <%= form.label :max_value, "Max Value", class: "block text-sm font-medium text-gray-700 dark:text-gray-300" %>
          <%= form.number_field :max_value, step: "any", class: "mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
        </div>
      </div>
    </div>

    <!-- Validation options for select, multi-select, checkbox, radio fields -->
    <div data-toggle-target="toggleable" data-toggle-show-if="select,multi_select,checkbox,radio" class="border-t border-gray-200 dark:border-gray-600 pt-6">
      <h3 class="text-lg font-medium leading-6 text-gray-900 dark:text-white mb-4">Options</h3>
      <div class="grid grid-cols-1 gap-4">
        <div id="options_container">
          <%= form.fields_for :options, campaign_field.options.present? ? campaign_field.options : [""] do |option_form| %>
            <div class="option-field flex items-center space-x-2">
              <div class="flex-grow">
                <%= text_field_tag "campaign_field[options][]", option_form.object, class: "block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
              </div>
              <button type="button" class="remove-option text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-300">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
              </button>
            </div>
          <% end %>
        </div>
        <button type="button" id="add_option" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-blue-700 dark:text-blue-300 bg-blue-100 dark:bg-blue-900 hover:bg-blue-200 dark:hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z" clip-rule="evenodd" />
          </svg>
          Add Option
        </button>
      </div>
    </div>

    <div class="flex justify-end space-x-3 pt-6 border-t border-gray-200 dark:border-gray-600">
      <%= link_to "Cancel", campaign_path(campaign), class: "btn btn-white" %>
      <%= form.submit class: "btn btn-primary" %>
    </div>
  </div>
<% end %>

<%= javascript_tag do %>
  document.addEventListener('turbo:load', function() {
    initializeFieldForm();
  });

  document.addEventListener('DOMContentLoaded', function() {
    initializeFieldForm();
  });

  function initializeFieldForm() {
    const fieldTypeSelect = document.querySelector('#campaign_field_field_type');
    const addOptionButton = document.querySelector('#add_option');
    const optionsContainer = document.querySelector('#options_container');
    
    if (fieldTypeSelect) {
      showHideValidationSections(fieldTypeSelect.value);
      
      fieldTypeSelect.addEventListener('change', function() {
        showHideValidationSections(this.value);
      });
    }
    
    if (addOptionButton && optionsContainer) {
      addOptionButton.addEventListener('click', function() {
        const optionField = document.createElement('div');
        optionField.className = 'option-field flex items-center space-x-2 mt-2';
        optionField.innerHTML = `
          <div class="flex-grow">
            <input type="text" name="campaign_field[options][]" class="block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white shadow-sm focus:border-blue-500 focus:ring-blue-500">
          </div>
          <button type="button" class="remove-option text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-300">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
            </svg>
          </button>
        `;
        optionsContainer.appendChild(optionField);
        
        const removeButton = optionField.querySelector('.remove-option');
        removeButton.addEventListener('click', function() {
          optionField.remove();
        });
      });
      
      // Initialize remove buttons for existing options
      document.querySelectorAll('.remove-option').forEach(button => {
        button.addEventListener('click', function() {
          this.closest('.option-field').remove();
        });
      });
    }
  }

  function showHideValidationSections(fieldType) {
    const textValidation = document.querySelector('[data-toggle-show-if="text"]');
    const numberValidation = document.querySelector('[data-toggle-show-if="number"]');
    const optionsValidation = document.querySelector('[data-toggle-show-if="select,multi_select,checkbox,radio"]');
    
    if (textValidation) {
      textValidation.style.display = fieldType === 'text' || fieldType === 'email' || fieldType === 'phone' ? 'block' : 'none';
    }
    
    if (numberValidation) {
      numberValidation.style.display = fieldType === 'number' ? 'block' : 'none';
    }
    
    if (optionsValidation) {
      const optionTypes = ['select', 'multi_select', 'checkbox', 'radio'];
      optionsValidation.style.display = optionTypes.includes(fieldType) ? 'block' : 'none';
    }
  }
<% end %>